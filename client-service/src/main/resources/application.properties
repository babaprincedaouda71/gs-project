spring.application.name=client-service
server.port=8081

# Configuration de la source de donnees
spring.datasource.url=${DB_URL:jdbc:mysql://localhost:3306/clients_db?createDatabaseIfNotExist=true}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.username=root
#spring.datasource.password=
spring.datasource.password=babaprince


# Configuration Hibernate
spring.jpa.hibernate.ddl-auto=create
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQLDialect
spring.jpa.show-sql=true

## Configuration du serveur pour accueillir les fichiers images
spring.servlet.multipart.enabled=true
spring.servlet.multipart.max-file-size=100MB
spring.servlet.multipart.max-request-size=100MB


### Config service
spring.cloud.config.enabled=false
#spring.config.import=${CONFIG_SERVICE_URL:http://localhost:9999}
#spring.config.import=${CONFIG_SERVICE_URL:http://gs-config-service:9999}


####### Disable Spring cloud && Spring Config
spring.cloud.discovery.enabled=true

eureka.instance.prefer-ip-address=true
eureka.client.service-url.defaultZone=${DISCOVERY_SERVICE_URL:http://localhost:8761/eureka}

## Actuator : qui permit de faire le monitoring
management.endpoints.web.exposure.include=*


## Security Configuration
spring.security.oauth2.resourceserver.jwt.issuer-uri=${OAUTH2_ISSUER_URI:http://localhost:8080/realms/gs-pfe-2024}
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${OAUTH2_JWK_SET_URI:http://localhost:8080/realms/gs-pfe-2024/protocol/openid-connect/certs}